{"version":3,"sources":["assets/img/product_4 œufs.svg","assets/img/product_400g pâtes blé dur en vrac.svg","assets/img/product_Pan levain.svg","assets/img/product_Tsanpinyon.svg","assets/img/product_carots.svg","assets/img sync /^/box_bg_.*/.svg$","assets/img/box_bg_4 œufs.svg","assets/img/box_bg_400g pâtes blé dur en vrac.svg","assets/img/box_bg_Pan levain.svg","assets/img/box_bg_Tsanpinyon.svg","assets/img/box_bg_carots.svg","components/helpers.tsx","assets/img/character_body.svg","assets/img/character_body_smiling.svg","assets/img/character_arm.svg","assets/img/character_arm_basket.svg","components/Character.tsx","pages/Loading.tsx","assets/img/cloud.svg","assets/img/sun.svg","assets/img/world_bg.png","assets/img/world_fg.png","pages/Home.tsx","components/Tooltip.tsx","components/OutsideClickHandler.tsx","components/SelectableItem.tsx","components/Road.tsx","assets/img/grass.svg","assets/img/tree_1_big.svg","components/Decor.tsx","assets/img/basket.svg","assets/img/basketShadow.svg","pages/Baskets.tsx","assets/img/cart.svg","assets/img/cart_with_arm.svg","assets/img/cartShadow.svg","components/Cart.tsx","assets/img/box_fg.svg","pages/Options.tsx","components/useStateWithLS.tsx","components/cashierSteps/Cabas.tsx","components/cashierSteps/Resume.tsx","components/LoadingSpinner.tsx","components/cashierSteps/Authentication.tsx","components/cashierSteps/UserDetails.tsx","components/cashierSteps/Shipping.tsx","components/cashierSteps/Redirection.tsx","assets/img/character_back.svg","assets/img/character_cashier.svg","assets/img/shop_desk.svg","assets/img/arrow_left.svg","pages/Cashier.tsx","App.tsx","serviceWorkerRegistration.ts","i18n.tsx","index.tsx","assets/img/product_default.svg","assets/img/box_bg_default.svg","assets/img sync /^/product_.*/.svg$"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","checkPath","path","includes","hasOwnProperty","split","slice","join","formatPrice","price","parseFloat","toString","toLocaleString","minimumFractionDigits","Character","options","direction","isSmiling","hasBasket","isWalking","animating","image_body","character_body_smiling","character_body","image_arm","character_arm_basket","character_arm","className","src","alt","draggable","Loading","React","forwardRef","props","ref","loadings","fr","de","en","loading","selectedLang","Home","t","useTranslation","useState","animated","setAnimated","characterWalking","setCharacterWalking","onClick","setTimeout","history","push","cloud","sun","role","world_bg","world_fg","Tooltip","text","show","setShow","useEffect","handleClick","document","addEventListener","removeEventListener","OutsideAlerter","activated","triggerThis","children","wrapperRef","useRef","handleClickOutside","event","current","target","Element","contains","OutsideClickHandler","SelectableItem","selected","setSelected","index","style","disabled","imgs","bg","icon","fg","Road","width","height","Decor","grasses","i","grass","treeBig","Baskets","chosenBasketId","chosenBasket","addBasketToCart","basket","attributes1","attributes2","attributes1_id","attr","sort","attributes2_id","JSON","stringify","compareAttributes","attributes","setChosenBasketAttrs","setChosenBasket","items","values","baskets","forEach","basketShadow","basketIcon","instock","stock_status","name","dangerouslySetInnerHTML","__html","parsed_short_description","Cart","chosenBasketAttributes","setChosenBasketAttributes","cartOpen","setCartOpen","totalPrice","setTotalPrice","basketPrice","cartPrice","reduce","currentPrice","option2","optionItems","option","product_icon","require","default","product_default","cartShadow","idToRemove","newArray","filter","removeFromCart","cart_with_arm","cart","to","length","Options","availableOptions","pageCount","Math","ceil","currentPage","setCurrentPage","animProductAdded","setAnimProductAdded","move","addOptionToCart","product","optionValue","optionPrice","SimpleProduct","processed_options","fullname","VariableProduct","selectedVariation","setSelectedVariation","variation","type","value","box_icon","optionIsInBasket","boxBg_default","boxFg","isVariable","decors","useStateWithLS","LsKey","defaultValue","currentLSvalue","localStorage","getItem","parse","setValue","setItem","Cabas","hasPastas","goNextStep","cabas","addAccessoryToCart","removeAccessoryFromCart","cabasPrice","Trans","i18nKey","strongcabas","Resume","chosenAccessories","getCurrentVariation","attribute","accessory","LoadingSpinner","Authentication","currentCustomer","currentStep","setCurrentStep","steps","setCurrentNamedStep","indexOf","nodeRefs","createRef","setLoading","loginError","setLoginError","registerError","setRegisterError","validateFields","setValidateFields","authRequest","setError","form","endpoint","a","formData","FormData","axios","url","process","method","headers","data","user","setCurrentCustomer","response","message","login","evt","preventDefault","forms","namedItem","register","TransitionGroup","CSSTransition","nodeRef","timeout","classNames","onSubmit","htmlFor","required","strongemail","username","displayCurrentStep","UserDetails","address","newAddressError","setNewAddressError","billing","entries","param","filled","Number","modifyAddress","params","URLSearchParams","put","apiUrl","first_name","last_name","address_1","postcode","city","phone","autoComplete","pattern","email","Shipping","shippingMethods","chosenShippingMethod","setChosenShippingMethod","title","Redirection","createdOrder","console","log","createOrder","then","href","order_key","Cashier","stepOrder","find","accessories","slug","goStep","item","setChosenAccessories","newAccessories","character_cashier","shop_desk","character_back","currentVariation","arrow_left","App","windowHeight","setWindowHeight","windowWidth","setWindowWidth","wrapperWidth","updateWindowDimensions","window","innerHeight","innerWidth","useHistory","location","useLocation","loadingRef","homeRef","basketsRef","optionsRef","cashierRef","currentPathname","pathname","ready","undefined","useSuspense","setBaskets","setCurrentVariation","setAccessories","setShippingMethods","setCreatedOrder","basketsLoading","setBasketsLoading","accessoriesLoading","setAccessoriesLoading","shippingMethodsLoading","setShippingMethodsLoading","fetchData","setData","setDataLoading","result","error","customer","shipping","order","maxWidth","transitionBetwPagesDur","currentPageLoading","basketAttributes","attrInCart","replace","chr","charCodeAt","substr","key","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","i18n","use","Backend","LanguageDetector","initReactI18next","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","interpolation","escapeValue","formatSeparator","react","wait","ReactDOM","render","StrictMode","getElementById","URL","origin","fetch","contentType","get","status","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f01fa1df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/product_4 œufs.3c47bd14.svg\";","export default __webpack_public_path__ + \"static/media/product_400g pâtes blé dur en vrac.270f1000.svg\";","export default __webpack_public_path__ + \"static/media/product_Pan levain.53660097.svg\";","export default __webpack_public_path__ + \"static/media/product_Tsanpinyon.e800f348.svg\";","export default __webpack_public_path__ + \"static/media/product_carots.3ed16064.svg\";","var map = {\n\t\"./box_bg_4 œufs.svg\": 111,\n\t\"./box_bg_400g pâtes blé dur en vrac.svg\": 112,\n\t\"./box_bg_Pan levain.svg\": 113,\n\t\"./box_bg_Tsanpinyon.svg\": 114,\n\t\"./box_bg_carots.svg\": 115,\n\t\"./box_bg_default.svg\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 110;","export default __webpack_public_path__ + \"static/media/box_bg_4 œufs.4f7534c5.svg\";","export default __webpack_public_path__ + \"static/media/box_bg_400g pâtes blé dur en vrac.1fb88cc4.svg\";","export default __webpack_public_path__ + \"static/media/box_bg_Pan levain.66b08da4.svg\";","export default __webpack_public_path__ + \"static/media/box_bg_Tsanpinyon.d25babf0.svg\";","export default __webpack_public_path__ + \"static/media/box_bg_carots.e23074f4.svg\";","/**\r\n * Check the existance of a parameter in a mutli level object\r\n * \r\n * @param {Object} o base object in which you want to look for a parameter\r\n * @param {String} path full path of the parameter you wanna check the existance for (e.g. 'param1.param2.param3')\r\n * @returns {Boolean} \r\n */\r\nexport const checkPath = (o: {[k: string]: any} = {}, path: string): Boolean => {\r\n    if (path.includes('.')) {\r\n        if (o.hasOwnProperty(path.split('.')[0])) return checkPath(o[path.split('.')[0]], path.split('.').slice(1).join('.'));\r\n        else return false\r\n    } else return o.hasOwnProperty(path);\r\n}\r\n\r\n/**\r\n * Format a price to a fr-CH price\r\n * e.g. 41 -> 41,00\r\n * \r\n * @param {String | number} price The price you want to convert\r\n * @returns {String} the formated price\r\n */\r\nexport const formatPrice = (price: string | number): string => {\r\n    return parseFloat(price.toString()).toLocaleString('fr-CH', { minimumFractionDigits: 2 })\r\n}","export default __webpack_public_path__ + \"static/media/character_body.fc8700bd.svg\";","export default __webpack_public_path__ + \"static/media/character_body_smiling.058ddd80.svg\";","export default __webpack_public_path__ + \"static/media/character_arm.29e8b0cb.svg\";","export default __webpack_public_path__ + \"static/media/character_arm_basket.e74a869b.svg\";","import './Character.scss'\r\n\r\nimport character_body from 'assets/img/character_body.svg'\r\nimport character_body_smiling from 'assets/img/character_body_smiling.svg'\r\nimport character_arm from 'assets/img/character_arm.svg'\r\nimport character_arm_basket from 'assets/img/character_arm_basket.svg'\r\n\r\ntype CharacterProps = {\r\n    options: {\r\n        direction?: string; \r\n        isSmiling?: boolean;\r\n        hasBasket?: boolean;\r\n        isWalking?: boolean;\r\n        animating?: boolean;\r\n    }\r\n}\r\n\r\nconst Character = ({options}: CharacterProps) => {\r\n    const {\r\n        direction = \"r\", \r\n        isSmiling = false,\r\n        hasBasket = false,\r\n        isWalking = false,\r\n        animating = false\r\n    } = options\r\n\r\n    const image_body = isSmiling ? character_body_smiling : character_body\r\n    const image_arm = hasBasket ? character_arm_basket : character_arm\r\n\r\n    return (\r\n        <div className={`character-wrapper ${direction} ${isWalking ? 'walking' : ''} ${animating ? 'animating' : ''}`}>\r\n            <img className=\"character_part body\" src={image_body} alt=\"\" draggable=\"false\" />\r\n            <img className=\"character_part arm\" src={image_arm} alt=\"\" draggable=\"false\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Character;","import './Loading.scss'\r\nimport React from 'react';\r\n\r\nimport Character from 'components/Character';\r\n\r\ntype LoadingProps = {\r\n  hasBasket: boolean;\r\n  selectedLang: string;\r\n}\r\n\r\nconst Loading = React.forwardRef<HTMLDivElement, LoadingProps>((props, ref) => {\r\n  // The translation is made manually here because i18next may not be loaded yet\r\n  const loadings: any = {\r\n    fr: \"Chargement\",\r\n    de: \"Beladung\",\r\n    en: \"Loading\"\r\n  }\r\n  const loading = loadings.hasOwnProperty(props.selectedLang) ? loadings[props.selectedLang] : loadings.fr\r\n\r\n  return (\r\n    <div ref={ref} className=\"page loading\">\r\n      <main className=\"wrapper\">\r\n        <p className=\"text\">{loading}</p>\r\n        <Character options={{ hasBasket: props.hasBasket, isWalking: true }} />\r\n      </main>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Loading;","export default __webpack_public_path__ + \"static/media/cloud.29c06565.svg\";","export default __webpack_public_path__ + \"static/media/sun.13a39187.svg\";","export default __webpack_public_path__ + \"static/media/world_bg.253775d8.png\";","export default __webpack_public_path__ + \"static/media/world_fg.ae38b1a1.png\";","import './Home.scss';\r\n\r\nimport React, { useState } from 'react';\r\nimport { History } from 'history';\r\n\r\nimport cloud from 'assets/img/cloud.svg'\r\nimport sun from 'assets/img/sun.svg'\r\nimport world_bg from 'assets/img/world_bg.png'\r\nimport world_fg from 'assets/img/world_fg.png'\r\n\r\nimport Character from 'components/Character'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype HomeProps = {\r\n    history: History;\r\n}\r\n\r\nconst Home = React.forwardRef<HTMLDivElement, HomeProps>((props, ref) => {\r\n    const { t } = useTranslation();\r\n    const [animated, setAnimated] = useState(false)\r\n    const [characterWalking, setCharacterWalking] = useState(false)\r\n\r\n    const animate = () => {\r\n        setAnimated(true)\r\n        setTimeout(() => {\r\n            setCharacterWalking(true)\r\n        }, 1350)\r\n        setTimeout(() => {\r\n            setCharacterWalking(false)\r\n            props.history.push('/baskets')\r\n        }, 3350)\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className=\"page home\" onClick={animate}>\r\n            <main className={`wrapper ${animated ? 'animated' : ''}`}>\r\n                <div className=\"cloud-wrapper\">\r\n                    <img className=\"cloud\" src={cloud} alt=\"\" draggable=\"false\" />\r\n                </div>\r\n                <div className=\"sun-wrapper\">\r\n                    <img className=\"sun\" src={sun} alt=\"\" draggable=\"false\" />\r\n                </div>\r\n                <div role=\"img\" className=\"composed-img world\">\r\n                    <img className=\"bg\" src={world_bg} alt=\"\" draggable=\"false\" />\r\n                    <Character options={{direction: 'l', isWalking: characterWalking}} />\r\n                    <img className=\"fg\" src={world_fg} alt=\"\" draggable=\"false\" />\r\n                </div>\r\n                <div className=\"text\">{t('clickOnWorld')}</div>\r\n            </main>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Home;","import './Tooltip.scss'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\ntype TooltipProps = {\r\n    text: string;\r\n}\r\n\r\nconst Tooltip = ({text}: TooltipProps) => {\r\n    const [show, setShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setShow(true)\r\n        \r\n        const handleClick = () => {\r\n            setShow(false)\r\n        }\r\n\r\n        document.addEventListener('mousedown', handleClick)\r\n        return () => { \r\n            document.removeEventListener('mousedown', handleClick)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`tooltip ${show ? 'showing' : ''}`}>\r\n            <p className=\"text\">{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Tooltip;","import React, { useRef, useEffect } from \"react\";\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nfunction OutsideClickHandler(ref: React.RefObject<HTMLDivElement>, activated: boolean, triggerThis: () => void) {\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event: MouseEvent) {\r\n      if (activated && ref.current && event.target instanceof Element && !ref.current.contains(event.target)) {\r\n        triggerThis()\r\n      }\r\n    }\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [ref, activated, triggerThis]);\r\n}\r\n\r\ntype OutsideAlerterProps = {\r\n  activated: boolean;\r\n  triggerThis: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Component that alerts if you click outside of it\r\n */\r\nfunction OutsideAlerter({activated, triggerThis, children}: OutsideAlerterProps) {\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n  OutsideClickHandler(wrapperRef, activated, triggerThis);\r\n\r\n  return <div ref={wrapperRef}>{children}</div>;\r\n}\r\n\r\nexport default OutsideAlerter;\r\n","import './SelectableItem.scss'\r\nimport React, { useState } from 'react';\r\n\r\nimport OutsideClickHandler from 'components/OutsideClickHandler'\r\n\r\n\r\ntype SelectableItemProps = {\r\n    index?: number;\r\n    className?: string;\r\n    imgs: {bg?: string, icon?: string, fg?: string};\r\n    disabled?: boolean;\r\n    selected?: boolean;\r\n    children: any;\r\n}\r\n\r\nconst SelectableItem = (props: SelectableItemProps) => {\r\n    const [selected, setSelected] = useState(props.selected || false)\r\n    const index = props.index || 0\r\n\r\n    const closeModal = () => {\r\n        setSelected(false)\r\n    }\r\n\r\n    return (\r\n        <li className={`selectable-item ${selected ? 'selected' : ''} ${props.className}`} style={{['--index' as any]: index+1}}>\r\n            <OutsideClickHandler activated={selected} triggerThis={closeModal}>\r\n                <button className=\"btn-toggle\" onClick={() => setSelected(!selected)} disabled={props.disabled}>\r\n                    <div className=\"composed-img\" role=\"img\">\r\n                        { props.imgs.bg &&  <img className=\"bg\" src={props.imgs.bg} alt=\"\" draggable=\"false\" /> }\r\n                                            <img className=\"icon\" src={props.imgs.icon} alt=\"\" draggable=\"false\" />\r\n                        { props.imgs.fg &&  <img className=\"fg\" src={props.imgs.fg} alt=\"\" draggable=\"false\" /> }\r\n                    </div>\r\n                </button>\r\n                { props.children(setSelected) }\r\n            </OutsideClickHandler>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default SelectableItem;","import './Road.scss'\r\n\r\nimport React from 'react';\r\n\r\nconst Road = () => {\r\n\r\n    return (\r\n        <svg className=\"road\" width=\"4000\" height=\"150\">\r\n            <rect width=\"100%\" height=\"100%\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Road;","export default __webpack_public_path__ + \"static/media/grass.3d5741bc.svg\";","export default __webpack_public_path__ + \"static/media/tree_1_big.3c6c143c.svg\";","import './Decor.scss'\r\nimport React from 'react';\r\n\r\nimport grass from 'assets/img/grass.svg'\r\n/* import treeSmall from 'assets/img/tree_1_small.svg' */\r\nimport treeBig from 'assets/img/tree_1_big.svg'\r\n\r\ntype DecorProps = {\r\n    index?: number;\r\n}\r\n\r\nconst Decor = ({index = 1}: DecorProps) => {\r\n\r\n    const grasses = []\r\n    for (let i = 1; i <= 4; i++) {\r\n        grasses.push(\r\n            <img key={`grass_${i}`} className=\"grass\" src={grass} alt=\"\" draggable=\"false\" />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"decor\" style={{['--index' as any]: index-1}} >\r\n            <img className=\"tree\" src={treeBig} alt=\"\" draggable=\"false\" />\r\n            <div className=\"grasses\" >\r\n                { grasses }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Decor;","export default __webpack_public_path__ + \"static/media/basket.a06d3750.svg\";","export default __webpack_public_path__ + \"static/media/basketShadow.3fcbaf51.svg\";","import './Baskets.scss';\r\n\r\nimport React, { useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { History } from 'history';\r\n\r\nimport Character from 'components/Character'\r\nimport Tooltip from 'components/Tooltip'\r\nimport SelectableItem from 'components/SelectableItem'\r\nimport Road from 'components/Road'\r\nimport Decor from 'components/Decor'\r\n\r\nimport basketIcon from 'assets/img/basket.svg'\r\nimport basketShadow from 'assets/img/basketShadow.svg'\r\n\r\nimport Basket from 'models/Basket';\r\nimport BasketAttr from 'models/BasketAttr';\r\nimport ChosenBasketAttr from 'models/ChosenBasketAttr';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ntype BasketsProps = {\r\n    chosenBasket: Basket | null;\r\n    baskets: Array<Basket>;\r\n    setChosenBasketAttrs: Dispatch<SetStateAction<Array<ChosenBasketAttr>>>;\r\n    setChosenBasket: Dispatch<SetStateAction<Basket | null>>;\r\n    history: History;\r\n}\r\n\r\nconst Baskets = React.forwardRef<HTMLDivElement, BasketsProps>((props, ref) => {\r\n    const { t } = useTranslation();\r\n    const chosenBasketId = (props.chosenBasket) ? props.chosenBasket.id : null\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    const compareAttributes = (attributes1: Array<BasketAttr>, attributes2: Array<BasketAttr>) => {\r\n        const attributes1_id = attributes1.map(attr => attr.id).sort()\r\n        const attributes2_id = attributes2.map(attr => attr.id).sort()\r\n        return JSON.stringify(attributes1_id) === JSON.stringify(attributes2_id)\r\n    }\r\n\r\n    const addBasketToCart = (basket: Basket) => {\r\n        // reset chosenAttributes if the new basket doesn't have the same attributes as the precedent\r\n        if (props.chosenBasket && !compareAttributes(basket.attributes, props.chosenBasket.attributes)) {\r\n            props.setChosenBasketAttrs([])\r\n        }\r\n        props.setChosenBasket(basket)\r\n        props.history.push('/options')\r\n    }\r\n\r\n    const items: Array<JSX.Element> = []\r\n    Object.values(props.baskets).forEach((basket, i) => {\r\n        items.push(\r\n            <SelectableItem key={basket.id} index={i} selected={basket.id === chosenBasketId} imgs={{ bg: basketShadow, icon: basketIcon }} >\r\n                {(/* setSelected */) => {\r\n                    const instock = basket.stock_status !== \"outofstock\"\r\n                    return (\r\n                        <div className='banner'>\r\n                            <div className=\"header\">\r\n                                <h2 className=\"title\">{basket.name}</h2>\r\n                                <span className=\"price\">chf {basket.price}</span>\r\n                            </div>\r\n                            <div className=\"content\">\r\n                                <p className=\"text\" dangerouslySetInnerHTML={{ __html: basket.parsed_short_description }}></p>\r\n                            </div>\r\n                            <button className=\"basket-btn-add button primary\" onClick={() => addBasketToCart(basket)} disabled={!instock}> {instock ? t('form.choose') : t('form.outOfStock') }</button>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </SelectableItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div ref={ref} className=\"page baskets\">\r\n            <main className=\"wrapper\">\r\n                {!chosenBasketId && <Tooltip text={t('tooltip.chooseBasket')} />}\r\n                <ul className=\"baskets\">\r\n                    {items}\r\n                </ul>\r\n                <Character options={{}} />\r\n                <Road />\r\n                <Decor />\r\n            </main>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Baskets;","export default __webpack_public_path__ + \"static/media/cart.97c98eaf.svg\";","export default __webpack_public_path__ + \"static/media/cart_with_arm.40729c8b.svg\";","export default __webpack_public_path__ + \"static/media/cartShadow.11a396d4.svg\";","import './Cart.scss'\r\nimport React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SelectableItem from 'components/SelectableItem'\r\nimport OutsideClickHandler from 'components/OutsideClickHandler'\r\n\r\nimport cart from 'assets/img/cart.svg'\r\nimport cart_with_arm from 'assets/img/cart_with_arm.svg'\r\nimport cartShadow from 'assets/img/cartShadow.svg'\r\nimport product_default from 'assets/img/product_default.svg'\r\n\r\nimport ChosenBasketAttr from 'models/ChosenBasketAttr';\r\nimport Basket from 'models/Basket';\r\n\r\ntype CartProps = {\r\n    chosenBasketAttributes: Array<ChosenBasketAttr>;\r\n    setChosenBasketAttributes: Dispatch<SetStateAction<Array<ChosenBasketAttr>>>;\r\n    chosenBasket: Basket;\r\n    animating: boolean;\r\n}\r\n\r\nconst Cart = ({chosenBasketAttributes, setChosenBasketAttributes, chosenBasket, animating}: CartProps) => {\r\n    const { t } = useTranslation();\r\n    const [cartOpen, setCartOpen] = useState(false)\r\n    const [totalPrice, setTotalPrice] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const basketPrice = parseFloat(chosenBasket.price)\r\n        const cartPrice = chosenBasketAttributes.reduce((currentPrice, option2) => {\r\n            return currentPrice + parseFloat(option2.price)\r\n        }, basketPrice)\r\n        setTotalPrice(cartPrice)\r\n    }, [chosenBasketAttributes, chosenBasket])\r\n\r\n    const optionItems = chosenBasketAttributes.map(option => {\r\n        /* Fetch product icons dynamically */\r\n        let product_icon\r\n        try {\r\n          product_icon = require(`assets/img/product_${option.name}.svg`).default\r\n        } catch {\r\n          product_icon = product_default\r\n        }\r\n\r\n        const removeFromCart = (idToRemove: number) => {\r\n            const newArray = chosenBasketAttributes.filter(option => option.id !== idToRemove)\r\n            setChosenBasketAttributes(newArray)\r\n        }\r\n\r\n        return (\r\n            <SelectableItem key={`cart_option_${option.id}`} className=\"option\" imgs={{ bg: cartShadow, icon: product_icon }}>\r\n                {(/* setSelected */) => (\r\n                    <div className='banner'>\r\n                        <div className=\"header\">\r\n                            <span className=\"cart-item-title\">{option.name}</span>\r\n                            <span className=\"price\">chf{option.price}</span>\r\n                        </div>\r\n                        <button className=\"button primary remove-from-cart\" onClick={() => removeFromCart(option.id)}>{t('form.remove')}</button>\r\n                    </div>\r\n                )}\r\n            </SelectableItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={`cart ${cartOpen ? 'opened' : ''}`} >\r\n            <button id=\"cart-btn\" className={`button secondary cart ${animating ? 'animating' : ''}`} onClick={() => setCartOpen(true)}>\r\n                <img className=\"cart-icon\" src={cart_with_arm} alt=\"\" draggable=\"false\" />\r\n            </button>\r\n            <OutsideClickHandler activated={cartOpen} triggerThis={() => setCartOpen(false)}>\r\n                <div className=\"content\">\r\n                    <div className=\"first-line\">\r\n                        <ul className=\"list-basket\">\r\n                            <SelectableItem key=\"cart_basket\" imgs={{ bg: cartShadow, icon: cart }}>\r\n                                {(/* setSelected */) => (\r\n                                    <div className='banner'>\r\n                                        <div className=\"header\">\r\n                                            <h2 className=\"cart-item-title\">{chosenBasket.name}</h2>\r\n                                            <span className=\"price\">chf {chosenBasket.price}</span>\r\n                                        </div>\r\n                                        <Link to=\"/baskets\" className=\"button primary modify-basket\">{t('form.modify')}</Link>\r\n                                    </div>\r\n                                )}\r\n                            </SelectableItem>\r\n                        </ul>\r\n                        <span className=\"price\">chf {totalPrice.toLocaleString('fr-CH', { minimumFractionDigits: 2 })}</span>\r\n                    </div>\r\n                    {optionItems.length > 0 &&\r\n                        <ul className=\"list-options\">\r\n                            {optionItems}\r\n                        </ul>\r\n                    }\r\n                </div>\r\n            </OutsideClickHandler>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","export default __webpack_public_path__ + \"static/media/box_fg.854ff49b.svg\";","import './Options.scss';\r\n\r\nimport React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Character from 'components/Character'\r\nimport Tooltip from 'components/Tooltip'\r\nimport SelectableItem from 'components/SelectableItem'\r\nimport Road from 'components/Road'\r\nimport Decor from 'components/Decor'\r\nimport Cart from 'components/Cart'\r\n\r\nimport boxBg_default from 'assets/img/box_bg_default.svg'\r\nimport product_default from 'assets/img/product_default.svg'\r\nimport boxFg from 'assets/img/box_fg.svg'\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport BasketAttr from 'models/BasketAttr';\r\nimport Basket from 'models/Basket';\r\nimport ChosenBasketAttr from 'models/ChosenBasketAttr';\r\nimport BasketAttrOption from 'models/BasketAttrOption';\r\n\r\ntype OptionsProps = {\r\n  chosenBasket: Basket;\r\n  chosenBasketAttributes: Array<ChosenBasketAttr>;\r\n  setChosenBasketAttributes: Dispatch<SetStateAction<Array<ChosenBasketAttr>>>;\r\n}\r\n\r\nconst Options = React.forwardRef<HTMLDivElement, OptionsProps>((props, ref) => {\r\n    const { t } = useTranslation();\r\n    //const availableOptions = props.chosenBasket.attributes\r\n    const availableOptions = [\r\n      {\r\n        \"id\": 3,\r\n        \"name\": \"4 œufs\",\r\n        \"position\": 4,\r\n        \"visible\": false,\r\n        \"variation\": true,\r\n        \"options\": [\r\n          \"Avec (Supplément CHF 4.00)\",\r\n          \"Sans\"\r\n        ],\r\n        \"isVariable\": false,\r\n        \"processed_options\": [\r\n          {\r\n            \"fullname\": \"Avec (Supplément CHF 4.00)\",\r\n            \"name\": \"Avec\",\r\n            \"price\": \" 4.00\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"id\": 6,\r\n        \"name\": \"Pan levain\",\r\n        \"position\": 5,\r\n        \"visible\": false,\r\n        \"variation\": true,\r\n        \"options\": [\r\n          \"Baguette 250g (Supplément CHF 2.00)\",\r\n          \"Mi-blanc 500g (Supplément CHF 3.00)\",\r\n          \"Sans\"\r\n        ],\r\n        \"isVariable\": true,\r\n        \"processed_options\": [\r\n          {\r\n            \"fullname\": \"Baguette 250g (Supplément CHF 2.00)\",\r\n            \"name\": \"Baguette 250g\",\r\n            \"price\": \" 2.00\"\r\n          },\r\n          {\r\n            \"fullname\": \"Mi-blanc 500g (Supplément CHF 3.00)\",\r\n            \"name\": \"Mi-blanc 500g\",\r\n            \"price\": \" 3.00\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"id\": 5,\r\n        \"name\": \"400g pâtes blé dur en vrac\",\r\n        \"position\": 6,\r\n        \"visible\": false,\r\n        \"variation\": true,\r\n        \"options\": [\r\n          \"Avec (Supplément CHF 3.00)\",\r\n          \"Sans\"\r\n        ],\r\n        \"isVariable\": false,\r\n        \"processed_options\": [\r\n          {\r\n            \"fullname\": \"Avec (Supplément CHF 3.00)\",\r\n            \"name\": \"Avec\",\r\n            \"price\": \" 3.00\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"id\": 4,\r\n        \"name\": \"Tsanpinyon\",\r\n        \"position\": 7,\r\n        \"visible\": false,\r\n        \"variation\": true,\r\n        \"options\": [\r\n          \"250g (Supplément CHF 2.50)\",\r\n          \"500g (Supplément CHF 4.50)\",\r\n          \"Sans\"\r\n        ],\r\n        \"isVariable\": true,\r\n        \"processed_options\": [\r\n          {\r\n            \"fullname\": \"250g (Supplément CHF 2.50)\",\r\n            \"name\": \"250g\",\r\n            \"price\": \" 2.50\"\r\n          },\r\n          {\r\n            \"fullname\": \"500g (Supplément CHF 4.50)\",\r\n            \"name\": \"500g\",\r\n            \"price\": \" 4.50\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"id\": 9,\r\n        \"name\": \"Nouveau produit\",\r\n        \"position\": 7,\r\n        \"visible\": false,\r\n        \"variation\": true,\r\n        \"options\": [\r\n          \"250g (Supplément CHF 2.50)\",\r\n          \"500g (Supplément CHF 4.50)\",\r\n          \"Sans\"\r\n        ],\r\n        \"isVariable\": true,\r\n        \"processed_options\": [\r\n          {\r\n            \"fullname\": \"250g (Supplément CHF 2.50)\",\r\n            \"name\": \"250g\",\r\n            \"price\": \" 2.50\"\r\n          },\r\n          {\r\n            \"fullname\": \"500g (Supplément CHF 4.50)\",\r\n            \"name\": \"500g\",\r\n            \"price\": \" 4.50\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    /* const availableOptions = []\r\n    for(let i = 1; i <= 16; i++) {\r\n      availableOptions.push({ id: i })\r\n    } */\r\n    const pageCount = Math.ceil(availableOptions.length / 4)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [characterWalking, setCharacterWalking] = useState(false)\r\n    const [animProductAdded, setAnimProductAdded] = useState(false)\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    const move = (direction: string) => {\r\n      setCharacterWalking(true)\r\n      if (direction === \"next\") {\r\n        setCurrentPage(currentPage+1)\r\n      } else if (direction === \"previous\") {\r\n        setCurrentPage(currentPage-1)\r\n      }\r\n      setTimeout(() => {\r\n          setCharacterWalking(false)\r\n      }, 2000)\r\n    }\r\n\r\n    const addOptionToCart = (product: BasketAttr, optionValue: string, optionPrice: string) => {\r\n      props.setChosenBasketAttributes([...props.chosenBasketAttributes, {\r\n        id: product.id,\r\n        name: product.name,\r\n        option: optionValue,\r\n        price: optionPrice\r\n      }])\r\n      setAnimProductAdded(true)\r\n      setTimeout(() => {\r\n        setAnimProductAdded(false)\r\n      }, 600)\r\n    }\r\n\r\n    type ProductProps = {\r\n      setSelected: Dispatch<SetStateAction<boolean>>;\r\n      product: BasketAttr;\r\n    }\r\n\r\n    const SimpleProduct = ({setSelected, product}: ProductProps) => {\r\n      const name = product.name\r\n      const { fullname, price } = product.processed_options[0]\r\n      \r\n      const handleAddProduct = () => {\r\n        setSelected(false)\r\n        addOptionToCart(product, fullname, price)\r\n      }\r\n\r\n      return (\r\n        <div className='banner'>\r\n            <div className=\"header\">\r\n                <h2 className=\"option-title\">{name}</h2>\r\n                <span className=\"price\">chf{price}</span>\r\n            </div>\r\n            <button className=\"option-btn-add button primary\" onClick={() => handleAddProduct()}>{t('form.add')}</button>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n    const VariableProduct = ({setSelected, product}: ProductProps) => {\r\n      const name = product.name\r\n      const [selectedVariation, setSelectedVariation] = useState<BasketAttrOption | null>(null)\r\n\r\n      const handleAddProduct = () => {\r\n        setSelected(false)\r\n        if(selectedVariation) {\r\n          addOptionToCart(product, selectedVariation.fullname, selectedVariation.price)\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div className='banner'>\r\n            <div className=\"header\">\r\n                <h2 className=\"option-title\">{name}</h2>\r\n            </div>\r\n            <ul className=\"option-variations\">\r\n                {\r\n                  product.processed_options.map(variation =>\r\n                    <li key={variation.fullname} className=\"option-variation\">\r\n                      <label className={`button toggle ${(selectedVariation && selectedVariation.fullname === variation.fullname) && 'selected'}`} onClick={() => setSelectedVariation(variation)}>\r\n                        <input type=\"radio\" id={variation.name} name={name} value={variation.fullname} />\r\n                        {variation.name}\r\n                      </label>\r\n                      <span className=\"price\">chf{variation.price}</span>\r\n                    </li>  \r\n                  )\r\n                }\r\n            </ul>\r\n            <button className=\"option-btn-add button primary\" onClick={() => handleAddProduct()} disabled={!selectedVariation} >{t('form.add')}</button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const items: Array<JSX.Element> = []\r\n    Object.values(availableOptions).forEach((product, i) => {\r\n        const optionIsInBasket = props.chosenBasketAttributes.filter(option => option.id === product.id).length > 0\r\n        /* Fetch product icons dynamically */\r\n        let product_icon\r\n        let box_icon\r\n        try {\r\n          product_icon = require(`assets/img/product_${product.name}.svg`).default\r\n          box_icon = require(`assets/img/box_bg_${product.name}.svg`).default\r\n        } catch {\r\n          product_icon = product_default\r\n          box_icon = boxBg_default\r\n        }\r\n        items.push(\r\n            <SelectableItem key={`option_${product.id}`} index={i} imgs={{bg: box_icon, icon: (optionIsInBasket) ? '' : product_icon, fg: boxFg}} disabled={optionIsInBasket} >\r\n              { (setSelected: Dispatch<SetStateAction<boolean>>) => (\r\n                product.isVariable ? <VariableProduct setSelected={setSelected} product={product} /> : <SimpleProduct  setSelected={setSelected} product={product} />\r\n              )}\r\n            </SelectableItem>\r\n        )\r\n    })\r\n\r\n    const decors = []\r\n    for(let i=1; i<=pageCount; i++) {\r\n      decors.push(<Decor key={`decor_${i}`} index={i} />)\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className=\"page options\" style={{['--current-page' as any]: currentPage-1}}>\r\n            <main className=\"wrapper\">\r\n                <Tooltip text={t('tooltip.addSomething')} />\r\n                <Cart animating={animProductAdded} chosenBasket={props.chosenBasket} chosenBasketAttributes={props.chosenBasketAttributes} setChosenBasketAttributes={props.setChosenBasketAttributes} /> \r\n                <ul className=\"products\">\r\n                    { items }\r\n                </ul>\r\n                <Character options={{ hasBasket: true, isWalking: characterWalking, animating: animProductAdded }} />\r\n                <Road />\r\n                <nav className=\"navbar\">\r\n                  { currentPage > 1 &&\r\n                    <button className=\"button secondary previous\" onClick={() => move(\"previous\")}>{t('pagination.previous')}</button>\r\n                  }\r\n                  { currentPage < pageCount &&\r\n                    <button className=\"button secondary next\" onClick={() => move(\"next\")}>{t('pagination.next')}</button>\r\n                  }\r\n                  { currentPage >= pageCount &&\r\n                    <Link className=\"button primary checkout\" to=\"/cashier\">{t('pagination.checkout')}</Link>\r\n                  }\r\n                </nav> \r\n            </main>\r\n            <div className='decorative-elems'>\r\n              { decors }\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Options;","import { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\n\r\nconst useStateWithLS = <Type, >(LsKey: string, defaultValue: Type): [Type, Dispatch<SetStateAction<Type>>] => {\r\n    const currentLSvalue = localStorage.getItem(LsKey)\r\n\r\n    const [value, setValue] = useState<Type>(\r\n        currentLSvalue ? JSON.parse(currentLSvalue) : defaultValue\r\n    );\r\n\r\n    useEffect(() => {\r\n        value && localStorage.setItem(LsKey, JSON.stringify(value));\r\n    }, [value, LsKey]);\r\n\r\n    return [value, setValue];\r\n}\r\n\r\nexport default useStateWithLS;","import React from 'react'\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport { formatPrice } from 'components/helpers'\r\n\r\nimport Accessory from 'models/Accessory';\r\n\r\ntype CabasProps = {\r\n    hasPastas: boolean;\r\n    goNextStep: () => void;\r\n    cabas: Accessory;\r\n    addAccessoryToCart: (accessory: Accessory) => void;\r\n    removeAccessoryFromCart: (accessory: Accessory) => void;\r\n}\r\n\r\nconst Cabas = React.forwardRef<HTMLDivElement, CabasProps>(({hasPastas, goNextStep, cabas, addAccessoryToCart, removeAccessoryFromCart}, ref) => {\r\n    const { t } = useTranslation();\r\n    const cabasPrice = formatPrice(cabas.price)\r\n\r\n    const addCabas = () => {\r\n        addAccessoryToCart(cabas)\r\n        goNextStep()\r\n    }\r\n    const removeCabas = () => {\r\n        removeAccessoryFromCart(cabas)\r\n        goNextStep()\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className=\"cashier-step cabas\">\r\n            <div className=\"step-content\">\r\n                <p>\r\n                    <Trans i18nKey=\"cashier.cabas.wannaCabas\">\r\n                        Hello do you want <strong>{{ strongcabas: t('cashier.cabas.theCabas') }}</strong> {{ price: cabasPrice }} ?\r\n                    </Trans>\r\n                </p>\r\n                <br/>\r\n                <p>\r\n                    {hasPastas ? t('cashier.cabas.dontForgetWithPastas') : t('cashier.cabas.dontForgetWithoutPastas')}\r\n                </p>\r\n            </div>\r\n            <div className=\"step-buttons\">\r\n                <button className=\"button primary\" onClick={() => addCabas()}>{t('cashier.cabas.addCabas')}</button>\r\n                <button className=\"button secondary\" onClick={() => removeCabas()}>{t('cashier.cabas.noThanks')}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Cabas;","import './Resume.scss'\r\n\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from \"react-router-dom\";\r\nimport { formatPrice } from 'components/helpers'\r\n\r\nimport Basket from 'models/Basket';\r\nimport ChosenBasketAttr from 'models/ChosenBasketAttr';\r\nimport Accessory from 'models/Accessory';\r\n\r\ntype ResumeProps = {\r\n    goNextStep: () => void;\r\n    chosenBasket: Basket;\r\n    chosenBasketAttributes: Array<ChosenBasketAttr>;\r\n    chosenAccessories: Array<Accessory>;\r\n    getCurrentVariation: () => void;\r\n}\r\n\r\nconst Resume = React.forwardRef<HTMLDivElement, ResumeProps>(({ goNextStep, chosenBasket, chosenBasketAttributes, chosenAccessories, getCurrentVariation }, ref) => {\r\n    const { t } = useTranslation();\r\n\r\n    const confirm = () => {\r\n        getCurrentVariation()\r\n        goNextStep()\r\n    }\r\n\r\n    const basketPrice = parseFloat(chosenBasket.price)\r\n    const attributesPrice = chosenBasketAttributes.reduce((currentPrice, option2) => {\r\n        return currentPrice + parseFloat(option2.price)\r\n    }, 0)\r\n    const accessoriesPrice = chosenAccessories.reduce((currentPrice, option2) => {\r\n        return currentPrice + parseFloat(option2.price)\r\n    }, 0)\r\n\r\n    const totalPrice = basketPrice + attributesPrice + accessoriesPrice\r\n\r\n    return (\r\n        <div ref={ref} className=\"cashier-step resume\">\r\n            <div className=\"step-content\">\r\n                <p className=\"fixed-text\"> {t('cashier.resume.thereIsTheContent') } </p>\r\n                <div className=\"resume-wrapper\">\r\n\r\n                    {/* basket */}\r\n                    <div className=\"resume basket\">\r\n                        <div className=\"header\">\r\n                            <span className=\"name\">{chosenBasket.name}</span>\r\n                            <span className=\"price\">chf {formatPrice(chosenBasket.price)}</span>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <p className=\"text\" dangerouslySetInnerHTML={{ __html: chosenBasket.parsed_short_description }}></p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* attributes */}\r\n                    {   chosenBasketAttributes.map((attribute) => (\r\n                            <div key={`attr_${attribute.id}`} className=\"resume attribute\">\r\n                                <div className=\"header\">\r\n                                    <span className=\"name\">{attribute.name}</span>\r\n                                    <span className=\"price\">chf {formatPrice(attribute.price)}</span>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n\r\n                    {/* accessories */}\r\n                    {   chosenAccessories.map((accessory) => (\r\n                            <div key={`acce_${accessory.id}`} className=\"resume accessory\">\r\n                                <div className=\"header\">\r\n                                    <span className=\"name\">{accessory.name}</span>\r\n                                    <span className=\"price\">chf {formatPrice(accessory.price)}</span>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    \r\n                    {/* total price */}\r\n                    <div className=\"resume total\">\r\n                        <div className=\"header\">\r\n                            <span className=\"name\">{t('cashier.resume.total')}: </span>\r\n                            <span className=\"price\">chf {formatPrice(totalPrice.toString())}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"step-buttons\">\r\n                <button className=\"button primary\" onClick={() => confirm()}>{t('cashier.resume.confirm')}</button>\r\n                <Link className=\"button secondary\" to=\"/options\">{t('cashier.resume.back')}</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Resume;","import './LoadingSpinner.scss'\r\n\r\nconst LoadingSpinner = () => {\r\n\r\n    return (\r\n        <div className=\"spinner-wrapper\">\r\n            <div className=\"spinner\">\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner;","import React, { createRef, useState, Dispatch, SetStateAction, FormEvent } from 'react';\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { checkPath } from 'components/helpers'\r\n\r\nimport { CSSTransition, TransitionGroup, } from 'react-transition-group';\r\n\r\nimport LoadingSpinner from 'components/LoadingSpinner';\r\n\r\nimport Customer from 'models/Customer';\r\n\r\ntype AuthenticationProps = {\r\n    currentCustomer: Customer | null;\r\n    setCurrentCustomer: Dispatch<SetStateAction<Customer | null>>;\r\n    goNextStep: () => void;\r\n}\r\n\r\nconst Authentication = React.forwardRef<HTMLDivElement, AuthenticationProps>((props, ref) => {\r\n    const { t } = useTranslation();\r\n    const apiUrl = process.env.REACT_APP_API_URL\r\n\r\n    // Steps handling\r\n    const [currentStep, setCurrentStep] = useState(props.currentCustomer ? 3 : 1)\r\n    const steps = ['login', 'register', 'confirmation']\r\n\r\n    const setCurrentNamedStep = (name: string) => {\r\n        setCurrentStep(steps.indexOf(name) + 1)\r\n    }\r\n\r\n    const nodeRefs: React.Ref<HTMLDivElement>[] = steps.map(() => createRef<HTMLDivElement>())\r\n\r\n    // Auth requests\r\n    const [loading, setLoading] = useState(false)\r\n    const [loginError, setLoginError] = useState(\"\")\r\n    const [registerError, setRegisterError] = useState(\"\")\r\n    const [validateFields, setValidateFields] = useState(false)\r\n\r\n    const authRequest = async (setError: Dispatch<SetStateAction<any>>, form: HTMLFormElement, endpoint: string) => {\r\n        setLoading(true)\r\n        setError(\"\")\r\n        const formData = new FormData(form);\r\n\r\n        try {\r\n            const user: AxiosResponse<Customer> = await axios({\r\n                url: apiUrl + endpoint,\r\n                method: 'post',\r\n                headers: { \"Content-Type\": \"multipart/form-data\" },\r\n                data: formData\r\n            });\r\n            props.setCurrentCustomer(user.data)\r\n            props.goNextStep()\r\n        } catch (error) {\r\n            setError( checkPath(error, 'response.data.message') ? error.response.data.message : \"Erreur de communication avec le serveur. Veuillez svp passer votre commande sur bouteka.ch\" )\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    const login = async (evt: FormEvent) => {\r\n        evt.preventDefault()\r\n        authRequest(setLoginError, document.forms.namedItem('loginForm') as HTMLFormElement, 'jwt-auth')\r\n    }\r\n\r\n    const register = async (evt: FormEvent) => {\r\n        evt.preventDefault()\r\n        authRequest(setRegisterError, document.forms.namedItem('registerForm') as HTMLFormElement, 'customers')\r\n    }\r\n\r\n    const displayCurrentStep = () => {\r\n        switch (steps[currentStep - 1]) {\r\n            case \"login\": return (\r\n                <div className=\"understep\" ref={nodeRefs[0]}>\r\n                    <div className=\"step-content\">\r\n                        <p>{t('cashier.authentication.dialogHaveAccount')}</p>\r\n                        <form id=\"loginForm\" className={validateFields ? 'validate' : ''} onSubmit={login} >\r\n                            <label htmlFor=\"username\">{t('form.username')}</label>\r\n                            <input type=\"text\" id=\"username\" name=\"username\" required />\r\n                            <label htmlFor=\"password\">{t('form.pwd')}</label>\r\n                            <input type=\"password\" id=\"password\" name=\"password\" required />\r\n                            <p className=\"error\">{loginError}</p>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"step-buttons\">\r\n                        <button type=\"submit\" form=\"loginForm\" className=\"button primary\" disabled={loading} onClick={() => setValidateFields(true)} >{t('cashier.authentication.login')} {loading && <LoadingSpinner />}</button>\r\n                        <button className=\"button secondary\" onClick={() => {setCurrentNamedStep('register'); setValidateFields(false)}} disabled={loading}>{t('cashier.authentication.createAnAccount')}</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            case \"register\": return (\r\n                <div className=\"understep\" ref={nodeRefs[1]}>\r\n                    <div className=\"step-content\">\r\n                        <p>{t('cashier.authentication.dialogCreateAccount')}</p>\r\n                        <form id=\"registerForm\" className={validateFields ? 'validate' : ''} onSubmit={register}>\r\n                            <label htmlFor=\"username\">{t('form.username')}</label>\r\n                            <input type=\"text\" id=\"username\" name=\"username\" required />\r\n                            <label htmlFor=\"email\">{t('form.mail')}</label>\r\n                            <input type=\"email\" id=\"email\" name=\"email\" required />\r\n                            <label htmlFor=\"password\">{t('form.pwd')}</label>\r\n                            <input type=\"password\" id=\"password\" name=\"password\" required />\r\n                            <p className=\"error\">{registerError}</p>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"step-buttons\">\r\n                        <button type=\"submit\" form=\"registerForm\" className=\"button primary\" disabled={loading} onClick={() => setValidateFields(true)} >{t('cashier.authentication.createMyAccount')} {loading && <LoadingSpinner />}</button>\r\n                        <button className=\"button secondary\" onClick={() => {setCurrentNamedStep('login'); setValidateFields(false)}} disabled={loading} >{t('form.cancel')}</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            case \"confirmation\": return (\r\n                <div className=\"understep\" ref={nodeRefs[2]}>\r\n                    <div className=\"step-content\">\r\n                        <p>\r\n                            <Trans i18nKey=\"cashier.authentication.dialogAlreadyConnected\">\r\n                                You're connected as <strong>{{ strongemail: props.currentCustomer?.username }}</strong> is it you ?\r\n                            </Trans>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"step-buttons\">\r\n                        <button type=\"submit\" form=\"registerForm\" className=\"button primary\" onClick={props.goNextStep}>{t('form.confirm')}</button>\r\n                        <button className=\"button secondary\" onClick={() => setCurrentNamedStep('login')}>{t('cashier.authentication.changeAccount')}</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n            default: return <div></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className=\"cashier-step authentication\">\r\n            <TransitionGroup>\r\n                <CSSTransition key={currentStep} nodeRef={nodeRefs[currentStep - 1]} timeout={600} classNames=\"fade\" >\r\n                    {displayCurrentStep()}\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Authentication;","import React, { useState, createRef, FormEvent, Dispatch, SetStateAction } from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CSSTransition, TransitionGroup, } from 'react-transition-group';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { checkPath } from 'components/helpers'\r\n\r\nimport Customer from 'models/Customer';\r\nimport LoadingSpinner from 'components/LoadingSpinner';\r\n\r\ntype UserDetailsProps = {\r\n    currentCustomer: Customer;\r\n    setCurrentCustomer: Dispatch<SetStateAction<Customer | null>>;\r\n    goNextStep: () => void;\r\n}\r\n\r\nconst UserDetails = React.forwardRef<HTMLDivElement, UserDetailsProps>((props, ref) => {\r\n    const { t } = useTranslation();\r\n    const apiUrl = process.env.REACT_APP_API_URL\r\n\r\n    // Validation\r\n    const [validateFields, setValidateFields] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [newAddressError, setNewAddressError] = useState(\"\")\r\n\r\n    const validateExistingAddress = (address: Customer['billing']): Boolean => {\r\n        const everyFieldsFilled = Object.entries(address)\r\n        // Only take required address fields\r\n        .filter(([param, value]) => [\"first_name\", \"last_name\", \"address_1\", \"city\", \"postcode\", \"phone\", \"email\"].includes(param))\r\n        // Check that they all are filled\r\n        .reduce((filled, [param, value]) => {\r\n            return filled & Number(value.length >= 1)\r\n        }, 1);\r\n        return !!everyFieldsFilled\r\n    }\r\n\r\n    // Steps handling\r\n    const [currentStep, setCurrentStep] = useState(validateExistingAddress(props.currentCustomer.billing) ? 1 : 2)\r\n    const steps = ['confirmation', 'newAddress']\r\n\r\n    const setCurrentNamedStep = (name: string) => {\r\n        setCurrentStep(steps.indexOf(name) + 1)\r\n    }\r\n\r\n    const nodeRefs: React.Ref<HTMLDivElement>[] = steps.map(() => createRef<HTMLDivElement>())\r\n\r\n    // Request\r\n    const modifyAddress = async (evt: FormEvent) => {\r\n        evt.preventDefault()\r\n        setLoading(true)\r\n        setNewAddressError(\"\")\r\n        const formData = new FormData(document.forms.namedItem('newAddressForm') as HTMLFormElement);\r\n        // Transform formData into query string\r\n        const params = new URLSearchParams(formData as any).toString()\r\n        \r\n        try {\r\n            const user: AxiosResponse<Customer> = await axios.put(apiUrl + 'customers/'+props.currentCustomer.id, params)\r\n            props.setCurrentCustomer(user.data)\r\n            props.goNextStep()\r\n        } catch (error) {\r\n            setNewAddressError( checkPath(error, 'response.data.message') ? error.response.data.message : \"Erreur de communication avec le serveur. Veuillez svp passer votre commande sur bouteka.ch\" )\r\n        }\r\n\r\n        setLoading(false)\r\n        return\r\n    }\r\n\r\n    // Steps display\r\n    const displayCurrentStep = () => {\r\n        switch (steps[currentStep - 1]) {\r\n            case \"confirmation\": return (\r\n                <div className=\"understep\" ref={nodeRefs[0]}>\r\n                    <div className=\"step-content\">\r\n                        <p> {t('cashier.userDetails.dialogConfirm')} </p>\r\n                        <p>\r\n                            <div>{props.currentCustomer.billing.first_name} {props.currentCustomer.billing.last_name}</div>\r\n                            <div>{props.currentCustomer.billing.address_1}</div>\r\n                            <div>{props.currentCustomer.billing.postcode} {props.currentCustomer.billing.city}</div>\r\n                            <div>{props.currentCustomer.billing.phone}</div>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"step-buttons\">\r\n                        <button type=\"submit\" className=\"button primary\" onClick={props.goNextStep}>{t('form.confirm')}</button>\r\n                        <button className=\"button secondary\" onClick={() => setCurrentNamedStep('newAddress')}>{t('form.modify')}</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            case \"newAddress\": return (\r\n                <div className=\"understep\" ref={nodeRefs[1]}>\r\n                    <div className=\"step-content\">\r\n                        <p>{t('cashier.userDetails.dialogAddAddress')}</p>\r\n                        <form id=\"newAddressForm\" className={validateFields ? 'validate' : ''} onSubmit={modifyAddress} autoComplete=\"on\" >\r\n                            <label htmlFor=\"name\">{t('form.name')}</label>\r\n                            <input type=\"text\" id=\"name\" name=\"name\" required autoComplete=\"lname\" />\r\n                            <label htmlFor=\"firstname\">{t('form.firstname')}</label>\r\n                            <input type=\"text\" id=\"firstname\" name=\"firstname\" required autoComplete=\"fname\" />\r\n                            <label htmlFor=\"street\">{t('form.street')}</label>\r\n                            <input type=\"text\" id=\"street\" name=\"street\" required autoComplete=\"shipping street-address\" />\r\n                            <label htmlFor=\"postcode\">{t('form.postcode')}</label>\r\n                            <input type=\"number\" id=\"postcode\" name=\"postcode\" required autoComplete=\"shipping postal-code\" />\r\n                            <label htmlFor=\"city\">{t('form.city')}</label>\r\n                            <input type=\"text\" id=\"city\" name=\"city\" required autoComplete=\"shipping locality\" />\r\n                            <label htmlFor=\"phone\">{t('form.phone')}</label>\r\n                            <input type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"(\\b(0041|0)|\\B\\+41)(\\s?\\(0\\))?(\\s)?[1-9]{2}(\\s)?[0-9]{3}(\\s)?[0-9]{2}(\\s)?[0-9]{2}\\b\" required autoComplete=\"tel\" />\r\n                            <input type=\"hidden\" id=\"email\" name=\"email\" value={props.currentCustomer.email} />\r\n                            <p className=\"error\">{newAddressError}</p>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"step-buttons\">\r\n                        <button type=\"submit\" form=\"newAddressForm\" className=\"button primary\" disabled={loading} onClick={() => setValidateFields(true)} >{t('form.confirm')} {loading && <LoadingSpinner />}</button>\r\n                        <button className=\"button secondary\" onClick={() => { setCurrentNamedStep('confirmation'); setValidateFields(false) }} disabled={loading} >{t('form.cancel')}</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n            default: return <div></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className=\"cashier-step user-details\">\r\n            <TransitionGroup>\r\n                <CSSTransition key={currentStep} nodeRef={nodeRefs[currentStep - 1]} timeout={600} classNames=\"fade\" >\r\n                    {displayCurrentStep()}\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UserDetails;","import './Shipping.scss'\r\n\r\nimport React, { Dispatch, SetStateAction } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport ShippingMethod from 'models/ShippingMethod';\r\n\r\ntype ShippingProps = {\r\n    goNextStep: () => void;\r\n    shippingMethods: Array<ShippingMethod>;\r\n    chosenShippingMethod: ShippingMethod;\r\n    setChosenShippingMethod: Dispatch<SetStateAction<ShippingMethod | null>>;\r\n}\r\n\r\nconst Shipping = React.forwardRef<HTMLDivElement, ShippingProps>((props, ref) => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div ref={ref} className=\"cashier-step shipping\">\r\n            <div className=\"step-content\">\r\n                <p className=\"fixed-text\"> {t('cashier.shipping.dialogAskWhere') } </p>\r\n                <ul className=\"shipping-methods\">\r\n                    {\r\n                    props.shippingMethods.map(method =>\r\n                        <li key={method.id} className=\"method\">\r\n                            <label className={`button toggle ${(props.chosenShippingMethod && props.chosenShippingMethod.id === method.id) && 'selected'}`} onClick={() => props.setChosenShippingMethod(method)}>\r\n                                <input type=\"radio\" id={`method${method.id}`} name={`method${method.id}`} value={method.id} />\r\n                                {method.title}\r\n                            </label>\r\n                        </li>  \r\n                    )\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"step-buttons\">\r\n                <button className=\"button primary\" onClick={props.goNextStep} disabled={!props.chosenShippingMethod} >{t('form.confirm')}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Shipping;","//import './Redirection.scss'\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport LoadingSpinner from 'components/LoadingSpinner';\r\n\r\nimport ShippingMethod from 'models/ShippingMethod';\r\nimport Basket from 'models/Basket';\r\nimport Variation from 'models/Variation';\r\nimport Accessory from 'models/Accessory';\r\nimport Customer from 'models/Customer';\r\nimport Order from 'models/Order';\r\n\r\ntype ShippingProps = {\r\n    chosenShippingMethod: ShippingMethod;\r\n    chosenBasket: Basket;\r\n    currentVariation: Variation;\r\n    chosenAccessories: Array<Accessory>;\r\n    currentCustomer: Customer | null;\r\n    createdOrder: Order | null;\r\n    createOrder: () => Promise<void>;\r\n}\r\n\r\nconst Redirection = React.forwardRef<HTMLDivElement, ShippingProps>((props, ref) => {\r\n    const { t } = useTranslation();\r\n    const [loading, setLoading] = useState(props.createdOrder == null)\r\n    console.log(\"loading\", loading)\r\n\r\n    useEffect(() => {\r\n        if(!props.createdOrder) {\r\n            props.createOrder().then(() => {\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div ref={ref} className=\"cashier-step shipping\">\r\n            <div className=\"step-content\">\r\n                <p className=\"fixed-text\"> {t('cashier.redirection.dialog') } </p>\r\n            </div>\r\n            <div className=\"step-buttons\">\r\n                <a  href={(loading || !props.createdOrder) ? \"\" : `https://dev.bouteka.ch/checkout/order-pay/${props.createdOrder.id}/?pay_for_order=true&key=${props.createdOrder.order_key}`} className=\"button primary\" >\r\n                    {loading ? t('form.loading') : t('cashier.redirection.goToPayPlatform')} {loading && <LoadingSpinner />}\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Redirection;","export default __webpack_public_path__ + \"static/media/character_back.ed8af560.svg\";","export default __webpack_public_path__ + \"static/media/character_cashier.d9be2ea4.svg\";","export default __webpack_public_path__ + \"static/media/shop_desk.0f7dbf09.svg\";","export default __webpack_public_path__ + \"static/media/arrow_left.ffc69230.svg\";","import './Cashier.scss';\r\n\r\nimport React, { createRef, Dispatch, SetStateAction } from 'react';\r\nimport { History } from 'history';\r\n\r\nimport { CSSTransition, TransitionGroup, } from 'react-transition-group';\r\n\r\nimport useStateWithLS from 'components/useStateWithLS';\r\n\r\nimport Cabas from 'components/cashierSteps/Cabas';\r\nimport Resume from 'components/cashierSteps/Resume';\r\nimport Authentication from 'components/cashierSteps/Authentication';\r\nimport UserDetails from 'components/cashierSteps/UserDetails';\r\nimport Shipping from 'components/cashierSteps/Shipping';\r\nimport Redirection from 'components/cashierSteps/Redirection';\r\n\r\nimport character_back from 'assets/img/character_back.svg'\r\nimport character_cashier from 'assets/img/character_cashier.svg'\r\nimport shop_desk from 'assets/img/shop_desk.svg'\r\nimport arrow_left from 'assets/img/arrow_left.svg'\r\n\r\nimport ChosenBasketAttr from 'models/ChosenBasketAttr';\r\nimport Variation from 'models/Variation';\r\nimport Accessory from 'models/Accessory';\r\nimport Basket from 'models/Basket';\r\nimport Customer from 'models/Customer';\r\nimport ShippingMethod from 'models/ShippingMethod';\r\nimport Order from 'models/Order';\r\n\r\ntype CashierProps = {\r\n    chosenBasket: Basket;\r\n    history: History;\r\n    chosenBasketAttributes: Array<ChosenBasketAttr>;\r\n    currentVariation: Variation | null;\r\n    getCurrentVariation: () => void;\r\n    accessories: Array<Accessory>;\r\n    chosenAccessories: Array<Accessory>;\r\n    setChosenAccessories: Dispatch<SetStateAction<Accessory[]>>;\r\n    shippingMethods: Array<ShippingMethod>;\r\n    chosenShippingMethod: ShippingMethod;\r\n    setChosenShippingMethod: Dispatch<SetStateAction<ShippingMethod | null>>;\r\n    createdOrder: Order | null;\r\n    createOrder: () => Promise<void>;\r\n    currentCustomer: Customer | null;\r\n    setCurrentCustomer: Dispatch<SetStateAction<Customer | null>>;\r\n}\r\n\r\nconst Cashier = React.forwardRef<HTMLDivElement, CashierProps>((props, ref) => {\r\n    const stepOrder = [\"Cabas\", \"Resume\", \"Authentication\", \"UserDetails\", \"Shipping\", \"Redirection\"]\r\n    const [currentStep, setCurrentStep] = useStateWithLS('currentStep', 1)\r\n\r\n    const hasPastas = !!props.chosenBasketAttributes.find(option => option.name === \"400g pâtes blé dur en vrac\")\r\n    const cabas = props.accessories.find(accessory => accessory.slug === \"le-cabas\")\r\n\r\n    const goStep = (direction: string) => {\r\n        if (direction === \"previous\") {\r\n            if (currentStep > 1) {\r\n                setCurrentStep(currentStep - 1)\r\n            } else {\r\n                props.history.push('/options')\r\n            }\r\n        }\r\n        else if (direction === \"next\" && currentStep < stepOrder.length) {\r\n            setCurrentStep(currentStep + 1)\r\n        }\r\n    }\r\n    const goPreviousStep = () => goStep(\"previous\")\r\n    const goNextStep = () => goStep(\"next\")\r\n\r\n    const addAccessoryToCart = (accessory: Accessory) => {\r\n        // If the accessory is already in the chosenAccessories array, don't add it twice\r\n        if (props.chosenAccessories.filter(item => item.id === accessory.id).length) return\r\n        props.setChosenAccessories([...props.chosenAccessories, accessory])\r\n    }\r\n    const removeAccessoryFromCart = (accessory: Accessory) => {\r\n        const newAccessories = props.chosenAccessories.filter(item => item.id !== accessory.id)\r\n        props.setChosenAccessories(newAccessories)\r\n    }\r\n\r\n    /* Transition */\r\n    /* const nodeRefs = useRef([])\r\n    stepOrder.map((step, i) => nodeRefs.current[i] ?? createRef()) */\r\n    const nodeRefs: React.Ref<HTMLDivElement>[] = stepOrder.map(() => createRef<HTMLDivElement>())\r\n\r\n    /* const nodeRefs = stepOrder.map(() => createRef<HTMLDivElement>()) */\r\n\r\n    const displayCurrentStep = () => {\r\n        switch (stepOrder[currentStep - 1]) {\r\n            case \"Cabas\": {\r\n                // Propose to buy the cabas only if it has been found in accessories list\r\n                if (cabas) return <Cabas ref={nodeRefs[0]} hasPastas={hasPastas} goNextStep={goNextStep} cabas={cabas} addAccessoryToCart={addAccessoryToCart} removeAccessoryFromCart={removeAccessoryFromCart} />\r\n                else {\r\n                    goNextStep()\r\n                    return\r\n                }\r\n            }\r\n            case \"Resume\": return <Resume ref={nodeRefs[1]} goNextStep={goNextStep} chosenBasket={props.chosenBasket} chosenBasketAttributes={props.chosenBasketAttributes} chosenAccessories={props.chosenAccessories} getCurrentVariation={props.getCurrentVariation} />\r\n            case \"Authentication\": return <Authentication ref={nodeRefs[2]} goNextStep={goNextStep} currentCustomer={props.currentCustomer} setCurrentCustomer={props.setCurrentCustomer} />\r\n            case \"UserDetails\": return <UserDetails ref={nodeRefs[3]} goNextStep={goNextStep} currentCustomer={props.currentCustomer as Customer} setCurrentCustomer={props.setCurrentCustomer} />\r\n            case \"Shipping\": return <Shipping ref={nodeRefs[4]} goNextStep={goNextStep} shippingMethods={props.shippingMethods} chosenShippingMethod={props.chosenShippingMethod} setChosenShippingMethod={props.setChosenShippingMethod} />\r\n            case \"Redirection\": return <Redirection ref={nodeRefs[5]} chosenBasket={props.chosenBasket} currentVariation={props.currentVariation as Variation} chosenAccessories={props.chosenAccessories} currentCustomer={props.currentCustomer} chosenShippingMethod={props.chosenShippingMethod} createdOrder={props.createdOrder} createOrder={props.createOrder} />\r\n\r\n            default: return <div></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className=\"page cashier\">\r\n            <main className=\"wrapper\">\r\n                <div className=\"characters\">\r\n                    <div className={`character-wrapper cashier`}>\r\n                        <img className=\"character\" src={character_cashier} alt=\"\" draggable=\"false\" />\r\n                    </div>\r\n                    <div className='desk-wrapper'>\r\n                        <img className=\"desk\" src={shop_desk} alt=\"\" draggable=\"false\" />\r\n                    </div>\r\n                    <div className='character-wrapper user'>\r\n                        <img className=\"character\" src={character_back} alt=\"\" draggable=\"false\" />\r\n                    </div>\r\n                </div>\r\n                <TransitionGroup>\r\n                    <CSSTransition key={currentStep} nodeRef={nodeRefs[currentStep - 1]} timeout={600} classNames=\"fade\" >\r\n                        {displayCurrentStep()}\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <button className=\"button secondary goback\" onClick={() => goPreviousStep()}>\r\n                    <img className=\"arrow-icon\" src={arrow_left} alt=\"\" draggable=\"false\" />\r\n                </button>\r\n            </main>\r\n        </div>\r\n            )\r\n})\r\n\r\n            export default Cashier;","import 'App.scss';\r\n\r\nimport { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Switch, Route, useLocation, useHistory, Redirect } from \"react-router-dom\";\r\nimport axios, { AxiosResponse } from 'axios';\r\n\r\nimport { checkPath } from 'components/helpers'\r\n\r\nimport Loading from 'pages/Loading';\r\nimport Home from 'pages/Home';\r\nimport Baskets from 'pages/Baskets';\r\nimport Options from 'pages/Options';\r\nimport Cashier from 'pages/Cashier';\r\nimport useStateWithLS from 'components/useStateWithLS';\r\n\r\nimport Basket from 'models/Basket';\r\nimport ChosenBasketAttr from 'models/ChosenBasketAttr';\r\nimport Variation from 'models/Variation';\r\nimport Accessory from 'models/Accessory';\r\n\r\nimport { CSSTransition, TransitionGroup, } from 'react-transition-group';\r\nimport ShippingMethod from 'models/ShippingMethod';\r\nimport Order from 'models/Order';\r\nimport Customer from 'models/Customer';\r\n\r\nfunction App() {\r\n\r\n  /* page dimensions */\r\n  const [windowHeight, setWindowHeight] = useState(0)\r\n  const [windowWidth, setWindowWidth] = useState(0)\r\n  const maxWidth = 375 // px\r\n  const wrapperWidth = 0.95 // %\r\n\r\n  useEffect(() => {\r\n    const updateWindowDimensions = () => {\r\n      setWindowHeight(window.innerHeight)\r\n      setWindowWidth(window.innerWidth < window.innerHeight ? window.innerWidth : window.innerHeight)\r\n    }\r\n\r\n    window.addEventListener('resize', updateWindowDimensions)\r\n    updateWindowDimensions()\r\n\r\n    return () => window.removeEventListener('resize', updateWindowDimensions);\r\n  }, [])\r\n\r\n  /* Navigation */\r\n  let history = useHistory()\r\n  const location = useLocation()\r\n  const loadingRef = useRef<HTMLDivElement>(null)\r\n  const homeRef = useRef<HTMLDivElement>(null)\r\n  const basketsRef = useRef<HTMLDivElement>(null)\r\n  const optionsRef = useRef<HTMLDivElement>(null)\r\n  const cashierRef = useRef<HTMLDivElement>(null)\r\n  const nodeRefs = {\r\n    '/': homeRef,\r\n    '/baskets': basketsRef,\r\n    '/options': optionsRef,\r\n    '/cashier': cashierRef,\r\n    '/loading': loadingRef\r\n  }\r\n\r\n  const currentPathname = location.pathname as keyof typeof nodeRefs\r\n  const transitionBetwPagesDur: number = 600\r\n\r\n  /* i18n */\r\n  const { ready } = useTranslation(undefined, { useSuspense: false });\r\n  const [selectedLang, setSelectedLang] = useState('fr');\r\n\r\n  /* const changeLanguage = (event) => {\r\n    setSelectedLang(event.target.value);\r\n    i18n.changeLanguage(event.target.value);\r\n  } */\r\n\r\n  /* data */\r\n  const apiUrl = process.env.REACT_APP_API_URL\r\n\r\n  const [baskets, setBaskets] = useState<Array<Basket>>([])\r\n  const [chosenBasket, setChosenBasket] = useStateWithLS<Basket | null>('chosenBasket', null)\r\n  const [chosenBasketAttributes, setChosenBasketAttributes] = useStateWithLS<Array<ChosenBasketAttr>>('chosenBasketAttrs', [])\r\n  const [currentVariation, setCurrentVariation] = useStateWithLS<Variation | null>('currentVariation', null)\r\n\r\n  const [accessories, setAccessories] = useState<Array<Accessory>>([])\r\n  const [chosenAccessories, setChosenAccessories] = useStateWithLS<Array<Accessory>>('chosenAccessories', [])\r\n\r\n  const [shippingMethods, setShippingMethods] = useState<Array<ShippingMethod>>([])\r\n  const [chosenShippingMethod, setChosenShippingMethod] = useStateWithLS<ShippingMethod | null>('chosenShippingMethod', null)\r\n\r\n  const [currentCustomer, setCurrentCustomer] = useStateWithLS<Customer | null>('currentCustomer', null);\r\n\r\n  const [createdOrder, setCreatedOrder] = useStateWithLS<Order | null>('createdOrder', null)\r\n\r\n  const [basketsLoading, setBasketsLoading] = useState(!!baskets.length)\r\n  //const [currentVariationLoading, setCurrentVariationLoading] = useState(!!currentVariation)\r\n  const [accessoriesLoading, setAccessoriesLoading] = useState(!!accessories.length)\r\n  const [shippingMethodsLoading, setShippingMethodsLoading] = useState(!!shippingMethods.length)\r\n  const [error, setError] = useState<string | boolean>(false)\r\n\r\n  const currentPageLoading = () => {\r\n    switch(location.pathname) {\r\n      case \"/baskets\":\r\n        return basketsLoading\r\n      case \"/options\":\r\n        return basketsLoading\r\n      case \"/cashier\":\r\n        return accessoriesLoading || shippingMethodsLoading\r\n      default:\r\n        return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {string} endpoint the api endpoint to fetch\r\n   * @param {function} setData the setState function to execute with the fetched data.\r\n   */\r\n  const fetchData = async (endpoint: string, setData: Dispatch<SetStateAction<any>>, setDataLoading: Dispatch<SetStateAction<any>> | null = null) => {\r\n    setError(false);\r\n    if(setDataLoading) setDataLoading(true)\r\n\r\n    try {\r\n      const result = await axios(apiUrl + endpoint);\r\n      setData(result.data);\r\n    } catch (error) {\r\n      setError(error);\r\n      console.error(\"Fetch error\", error)\r\n    }\r\n\r\n    if(setDataLoading) setDataLoading(false)\r\n  }\r\n\r\n  const createOrder = async () => {\r\n    try {\r\n      const order: AxiosResponse<any> = await axios({\r\n        url: apiUrl + 'orders',\r\n        method: 'post',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        data: JSON.stringify({\r\n          customer: currentCustomer,\r\n          basket: chosenBasket,\r\n          variation: currentVariation,\r\n          accessories: chosenAccessories,\r\n          shipping: chosenShippingMethod\r\n        })\r\n      });\r\n      setCreatedOrder(order.data)\r\n      console.log(\"createdOrder\", order.data)\r\n    } catch (error) {\r\n      setError(checkPath(error, 'response.data.message') ? error.response.data.message : \"Erreur de communication avec le serveur. Veuillez svp passer votre commande sur bouteka.ch\")\r\n    }\r\n  }\r\n\r\n  // Convert special character to unicode in a string\r\n  const unicodize = (string: string) => {\r\n    return string.replace(/[\\u007F-\\uFFFF]/g, function (chr) {\r\n      return `\\\\u${(\"0000\" + chr.charCodeAt(0).toString(16)).substr(-4)}`\r\n    })\r\n  }\r\n\r\n  // Load the baskets\r\n  useEffect(() => {\r\n    if (ready) fetchData('products/baskets?lang=' + selectedLang, setBaskets, setBasketsLoading)\r\n  }, [ready, selectedLang, setBaskets])\r\n\r\n  // Load the accessories\r\n  useEffect(() => {\r\n    if (ready) fetchData('products/accessories?lang=' + selectedLang, setAccessories, setAccessoriesLoading)\r\n  }, [ready, selectedLang, setAccessories])\r\n\r\n  // Load the shipping methods\r\n  useEffect(() => {\r\n    if (ready) fetchData('orders/shipping-methods', setShippingMethods, setShippingMethodsLoading)\r\n  }, [ready, setShippingMethods])\r\n\r\n  // Reset createdOrder if user change something in his cart\r\n  useEffect(() => {\r\n    setCreatedOrder(null)\r\n  }, [chosenBasket, chosenBasketAttributes, chosenAccessories, chosenShippingMethod, currentCustomer])\r\n\r\n  // Search for the current variation depending on the chosen attributes\r\n  const getCurrentVariation = () => {\r\n    if (chosenBasket) {\r\n      // Format the array of the attributes with chosen value\r\n      const basketAttributes: object = chosenBasket.attributes.map(attribute => {\r\n        const attrInCart = chosenBasketAttributes.find(option => option.id === attribute.id)\r\n        return {\r\n          id: attribute.id,\r\n          name: attribute.name,\r\n          option: attrInCart ? attrInCart.option : \"Sans\"\r\n        }\r\n      })\r\n      // fetch data\r\n      fetchData(`products/baskets/${chosenBasket.id}/search-variation?attributes=${unicodize(JSON.stringify(basketAttributes))}`, setCurrentVariation)\r\n    } else {\r\n      setError(\"Can't get current variation if chosenBasket is null\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    currentVariation && console.log(\"useEffect currentVariation.id: \", currentVariation.id)\r\n  }, [currentVariation])\r\n\r\n  /* template */\r\n  return (\r\n    <div className=\"App\" style={{\r\n      ['--max-width' as any]: maxWidth + 'px',\r\n      ['--wrapper-width' as any]: (wrapperWidth * 100) + \"%\",\r\n      ['--window-height' as any]: windowHeight + 'px',\r\n      ['--window-width' as any]: windowWidth + 'px',\r\n      ['--window-width-95' as any]: (windowWidth * wrapperWidth) > maxWidth ? maxWidth + 'px' : (windowWidth * wrapperWidth) + 'px',\r\n      ['--transition-betw-pages-dur' as any]: transitionBetwPagesDur + 'ms'\r\n    }}>\r\n      <TransitionGroup>\r\n        <CSSTransition key={location.key} nodeRef={nodeRefs[currentPathname]} timeout={transitionBetwPagesDur} classNames=\"fade\" >\r\n          {ready && !currentPageLoading()\r\n            ?\r\n            <Switch location={location}>\r\n              <Route path=\"/baskets\">\r\n                  <Baskets ref={basketsRef} history={history} baskets={baskets} chosenBasket={chosenBasket} setChosenBasket={setChosenBasket} setChosenBasketAttrs={setChosenBasketAttributes} />\r\n              </Route>\r\n              <Route path=\"/options\">\r\n                {chosenBasket\r\n                  ? <Options ref={optionsRef} chosenBasket={chosenBasket as Basket} chosenBasketAttributes={chosenBasketAttributes} setChosenBasketAttributes={setChosenBasketAttributes} />\r\n                  : <Redirect to=\"/baskets\" />\r\n                }\r\n              </Route>\r\n              <Route path=\"/cashier\">\r\n                {chosenBasket\r\n                  ? <Cashier\r\n                    ref={cashierRef} history={history}\r\n                    chosenBasket={chosenBasket as Basket} chosenBasketAttributes={chosenBasketAttributes}\r\n                    currentVariation={currentVariation} getCurrentVariation={getCurrentVariation}\r\n                    accessories={accessories} chosenAccessories={chosenAccessories} setChosenAccessories={setChosenAccessories}\r\n                    shippingMethods={shippingMethods} chosenShippingMethod={chosenShippingMethod as ShippingMethod} setChosenShippingMethod={setChosenShippingMethod}\r\n                    currentCustomer={currentCustomer} setCurrentCustomer={setCurrentCustomer}\r\n                    createdOrder={createdOrder} createOrder={createOrder} />\r\n                  : <Redirect to=\"/baskets\" />\r\n                }\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home ref={homeRef} history={history} />\r\n              </Route>\r\n            </Switch>\r\n            :\r\n            <Loading ref={loadingRef} hasBasket={!!chosenBasket} selectedLang={selectedLang} />\r\n          }\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    lng: 'fr',\r\n    backend: {\r\n      /* translation file path */\r\n      loadPath: '/assets/i18n/{{ns}}/{{lng}}.json'\r\n    },\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    interpolation: {\r\n      escapeValue: false,\r\n      formatSeparator: ','\r\n    },\r\n    react: {\r\n      wait: true\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './i18n';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();","export default __webpack_public_path__ + \"static/media/product_default.df20646f.svg\";","export default __webpack_public_path__ + \"static/media/box_bg_default.17cc177f.svg\";","var map = {\n\t\"./product_4 œufs.svg\": 101,\n\t\"./product_400g pâtes blé dur en vrac.svg\": 102,\n\t\"./product_Pan levain.svg\": 103,\n\t\"./product_Tsanpinyon.svg\": 104,\n\t\"./product_carots.svg\": 105,\n\t\"./product_default.svg\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 49;"],"sourceRoot":""}